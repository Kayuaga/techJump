apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      name: {{ .Values.name }}
      labels:
        app: {{ .Values.name }}
    spec:
      {{- if .Values.needMigration }}
      initContainers:
        - name: db-migration
          image: "{{ .Values.image }}"
          imagePullPolicy: Always
          command: [ "npm" ]
          args: [ "run", "migrate:up" ]
          env:
            - name: DB_USER
              value: "test"
            - name: DB_PASSWORD
              value: "K#gn$9}fW8m*?s61`isg2)Xdq*Ni+0EK"
            - name: DB_HOST
              value: "myeksauroraclusterstack-databaseb269d8bb-0td9vu421zqy.cluster-c117odnd1k38.eu-north-1.rds.amazonaws.com"


          envFrom:
            - configMapRef:
                name: {{ .Values.configMapName }}
            {{- end }}

      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.image }}"
          imagePullPolicy: Always
          env:
            - name: PORT
              value: "{{ .Values.port }}"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{.Values.secretName}}
                  key: DB_USERNAME

            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Values.secretName}}
                  key: DB_PASSWORD
          {{- if .Values.includeConfigMap }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMapName }}
                {{- end }}
      restartPolicy: Always