name: Main branch
on:
  workflow_dispatch:
  push:
    branches:
      - main

  concurrency:
    group: ${{ github.ref }} # Use branch name as the group identifier
    cancel-in-progress: true # Cancel any in-progress runs when a new commit is pushed

jobs:
  test-lerna-cache:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Cashing npm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: lerna cache
        id: lerna-cache
        uses: actions/cache/restore@v4
        with:
          path: lerna/cache
          key: cache-${{ github.run_id  }}
          restore-keys: |
            ${{ runner.os }}-lerna-${{ github.ref_name }}
            ${{ runner.os }}-lerna-main-
      - name: install dependencies
        run: npm ci
      - name: run scripts to test lerna cache
        run: lerna run blocker
      - name: update cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: lerna/cache
          key: ${{ runner.os }}-lerna-${{ github.ref_name }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('lerna/cache/run.json') }}

  run-scripts-main:
    runs-on: ubuntu-latest
    env:
      NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
    steps:
      - name: check env variables
        run: echo ${{ env }}
      - name: checkout
        uses: actions/checkout@v4
      - name: Cashing npm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: lerna cache
        id: lerna-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            lerna/cache
            packages/*/dist
          key: cache-${{ github.run_id  }}-new
          restore-keys: |
            cache-${{ runner.os }}-lerna-${{ github.ref_name }}
            cache-${{ runner.os }}-lerna-main-
      - name: install dependencies
        run: npm ci
      - name: run scripts to test lerna cache
        run: lerna run blocker --verbose
      - name: test scripts
        run: lerna run test
      - name: build app
        run: lerna run build
      - name: artifacts
        run:  echo 'something with artifacts!'
      - name: deploy app
        run: echo 'DEPLOYING !!!!!!1111'
      - name: Check lernas cache files
        run: ls lerna/*
      - name: update cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            lerna/cache
            packages/*/dist
          key: ${{ runner.os }}-lerna-${{ github.ref_name }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('lerna/cache/run.json') }}



