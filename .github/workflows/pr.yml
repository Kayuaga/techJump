name: Pull request
on:
  pull_request:

jobs:
  build-app:
    runs-on: ubuntu-latest
    env:
      REPOSITORY_NAME: ${{ github.event.pull_request.number }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Cashing npm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: lerna cache
        id: lerna-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            lerna/cache
            packages/*/dist
            projects/*/build
          key: cache-${{ github.run_id  }}
          restore-keys: |
            ${{ runner.os }}-lerna-${{ github.ref_name }}
            ${{ runner.os }}-lerna-main-
      - name: install dependencies
        run: npm ci
      - name: Prepare Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-north-1
      - name: deploying
        if: ${{ github.event.action == 'opened' || github.event.action == 'reopened' }}
        run: lerna run prepare-infrastructure
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr
      - name: Set environment variables
        run: |
          echo "DOCKER_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
      - name: login registry
        run: "echo Docker Registry: $DOCKER_REGISTRY"
      - name: build app
        run: lerna run build
      - name: prepare docker images
        run: lerna run docker-build
      - name: push docker image
        run: lerna run docker-push
      - name: update cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            lerna/cache
            packages/*/dist
            projects/*/build
          key: ${{ runner.os }}-lerna-${{ github.ref_name }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('lerna/cache/run.json') }}





